version: '3.8'

services:
#  backend:
#    build: .
#    env_file:
#      - .env
#    ports:
#      - "8080:8080"
#    networks:
#      - kafka-net
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://aws-0-ap-south-1.pooler.supabase.com:5432/postgres
#      - SPRING_DATASOURCE_USERNAME=postgres.ufwkdfwrrqurdgybwvse
#      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
#      - JWT_SECRET=${JWT_SECRET}
#      - JWT_EXPIRATION=${JWT_EXPIRATION}
#      - APP_PASSWORD=${APP_PASSWORD}
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "1660:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  redis_data:


